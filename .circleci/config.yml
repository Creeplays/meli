# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: circleci/golang:1.9

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/komuw/meli
    steps:
      - checkout
      - setup_remote_docker

      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            sudo mv /tmp/docker/* /usr/bin

      - run: go get -u github.com/golang/dep/cmd/dep
      - run: go get -u github.com/goreleaser/goreleaser
      - run: dep ensure; dep prune
      - run: go build --race -o meli main.go
      - run: ./meli -up -d -f testdata/docker-compose.yml
      - run: echo "number of running containers(expected=7), actual=" && docker ps -q | wc -l
      # stop the containers running from the previous command
      - run: cp meli testdata/ && cd testdata/ && docker ps -aq | xargs docker stop && ./meli -up -d
      - run: echo "number of running containers(expected=7), actual=" && docker ps -q | wc -l
      - run: go test -timeout 3m -race -cover -v ./...

      - deploy:
          name: do a github release on master
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo "todo: deploy with goreleaser"
              # git checkout . && git clean -fd
              # goreleaser --rm-dist -config .goreleaser.yml --skip-validate
            fi
